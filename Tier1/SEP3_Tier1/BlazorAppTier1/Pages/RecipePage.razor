@page "/Recipe/{search}"

@using Application.Logic
@using Application.LogicInterfaces
@using Domain.Models
@inject NavigationManager NavManager
@layout ShowRecipeLayout

         <div class="mx-5 my-3 flex justify-between text-sm font-semibold underline underline-offset-2" @onclick="Home">
                <div>
                    <button>Go to Home</button>
                </div>
            </div>
            <!-- component -->
<div class="md:px-32 py-8 w-full">
<div class="shadow overflow-hidden rounded border-b border-gray-200">
<table class="min-w-full bg-white">
      <thead class="bg-[#ffcc00] text-black">
        <tr>
          <th class="w-1/3 text-left py-3 px-4 uppercase font-semibold text-sm">Title</th>
          <th class="w-1/3 text-left py-3 px-4 uppercase font-semibold text-sm">Description</th>
            <th class="text-left py-3 px-4 uppercase font-semibold text-sm">Ingredients</th>
            <th class="text-left py-3 px-4 uppercase font-semibold text-sm">Add to Like</th>

        </tr>
      </thead>
        <tbody>
        @foreach (var emp in branches)
        {
            <tr>

                <td>
                    @emp.Title
                </td>
                <td>@emp.Description</td>
                <td >
                    @for (int i = 0; i < @emp.Ingredients.Length; i++)
                    {
                        <span>@emp.Ingredients[i], </span>
                    }
                </td>
                <td><input type='button' style='width:100%; height:100%;border: 2px solid black' value="Like Recipe"@onclick="@(() => Like(@emp))"/></td>

            </tr>
        }
        </tbody>
    </table>
</div>
</div>


@code {

    [Parameter]
    public string search { get; set; }

    private List<Domain.Models.Recipe>? branches = new List<Domain.Models.Recipe>();
    private string test;
    private IRecipeLogic _recipeLogic = new RecipeLogic();


    protected override void OnParametersSet()
    {
        test = search;
    }

    protected override async Task OnInitializedAsync()
    {
        List<Recipe> recipes = new List<Recipe>();
        recipes = await _recipeLogic.GetByIngredientsAsync(search);
        branches = recipes.Where(x => x.Status.Equals(true)).ToList();
        Console.WriteLine(branches);
        branches.ForEach(Console.WriteLine);

    }


@code
{
    private void Home()
    {
        NavManager.NavigateTo("/Home");
    }
    private void Like(Recipe recipe)
    {
        Connection.LikeRecipe(recipe);
    }

}

}