@page "/Login"
@using BlazorAppTier1.Services
@using global::Domain.Models
@inject IAuthService AuthService
@inject NavigationManager NavManager
@layout LoginLayout

<rel src="~/css/Login.css" />
<h3 class="header-login" >Login</h3>
<CascadingAuthenticationState>
    <AuthorizeView>
        <NotAuthorized>
            <div class="card center-login" style="padding: 20px" >
                <h3>Please login</h3>
                <div class="field" style="padding: 20px">
                    <label>User name:</label>
                    <input type="text" @bind="userName"/>
                </div>
                <div class="field" style="padding: 20px">
                    <label style="text-align: center">Password:</label>
                    <input type="password" @bind="password"/>
                </div>
                @if (!string.IsNullOrEmpty(errorLabel))
                {
                    <div class="field">
                        <label style="color: red">
                            @errorLabel
                        </label>
                    </div>
                }
                <div class="field" style="padding: 20px">
                    <button class="loginbtn" @onclick="LoginAsync">Log in</button>
                </div>
                <div class="field" style="padding: 20px">
                    <button class="loginbtn" title="Register" @onclick="RegisterAsync" >Register <span class="oi oi-key"></span></button>
                </div>
            </div>
        </NotAuthorized>
        <Authorized>
            
        </Authorized>
    </AuthorizeView>
</CascadingAuthenticationState>

@code {
    private string userName;
    private string password;
    private string errorLabel;
    private User user;

    private async Task LoginAsync()
    {
        errorLabel = "";
        try
        {
            await AuthService.LoginAsync(userName, password);
            NavManager.NavigateTo("/");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorLabel = $"Error: {e.Message}";
        }
    }
    
    private async Task RegisterAsync()
    {
        errorLabel = "";
        try
        {
            NavManager.NavigateTo("/Register");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorLabel = $"Error: {e.Message}";
        }
    }
    
}